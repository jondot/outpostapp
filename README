todo

X background job to calculate md5 sums
X limit for uploads according to file limit
X mounting sinatra uploader app on different process
X sinatra downloader app
X user login
X background job for email notifications
X location roller, background job & manual command on outpost itself



documentation
=============

Outpost is a simple file upload application. It can be use for any of these purposes:
- File upload service to use on your computer as a private inbox.
- A public file upload service.

Features
--------
- Upload files, limit file sizes and types.
- Automatic management/maintenance of uploads
  - Define many Outposts
  - Each Outpost holds several locations, where a location can be rolling i.e. after 24 hours
    archive the current location and roll into a new one.
- Automatic notifications (email).
- Web frontend.

Components
----------
- Configurator (`OutpostApp`), a Rails app responsible for configuration of elements and
  viewing of the activity in the system.
- Uploader (`UploaderApp`), a Sinatra app responsible for taking in uploads. Can/should be
  mounted separately.
- Downloader (`DownloaderApp`), a Sinatra app responsible for serving downloads. Can/should be
  mounted separately if needed.

Scenarios
---------
A public uploads service.
* Run `OutpostApp` on one machine to serve all of the different configurations of the system.
* Run `UploaderApp` on several machines, several processes to handle big uploads. Optionally also
  use nginx's features for file uploads (only dispatch to `UploaderApp` when file upload complete).
* Run `DownloaderApp` on similar setup as `UploaderApp`, but it is recommended to make use of CDN.

A private upload service.
* Run `OutpostApp` as is, using thin is recommended. Make sure to open up a port and have a viable
  DNS mapping.
* As a convenience have the root uploads folder on your desktop :)
